========================================================================
    CONSOLE APPLICATION : DigitRecognition_HMM Assignment
========================================================================



This HMM program recognise the digit 0-9.

Instruction:

If run on Microsoft Visual Studio 2010, press ctrl+F5, all the validation and results will get printed on the console.

If run from cmd prmt, type "g++ HMM.cpp -o HM" and then "./HM"


========================================================================

Console Outputs:
 
It is a menu driven program

First it outputs the choice between training and testing

Training option will print the observation seq of each utterance file of each digit and the p_star value and sequence state. It will take some time to complete the training.

Testing part will again give you two choices, Test in offline mode on testcase files already provided and the live recording module testing.


========================================================================

Files used in this program:

For training part:

1. 20 files of each digit, in format digit_1_1.

2. "codebook_manual.txt" codebook to create the observation seq, it is made by the "universe.txt" made by the utterance file of each digit using LBG algorithm

3. "lambda_<digit>" 10 files contains the final converged A, B and Pie matrix.


-----------------------------------------------------------

For Testing Part:

1. 10 file of each digit for testing the result.

2. "lambda_<digit>" 10 files contains the final converged A, B and Pie matrix.
 
3. "test.txt" contains the text file generated by the recording module in live testing.


==========================================================================

Program flow:-

1. First a universe is generated to make the codebook of size 32. 

2. Training is started in which we read 20 files utterance of each digit and create the observation sequence using the codebook.

3. Observation sequence is used to create the optimal lambda for each digit by averaging out the converged lambda's for each utterance using the 3 step solution using the feedforward model initially.

4. Training is start then by reading the 10 utterance of each digit and again creating observation sequence as previously done.

5. Probability of that observation sequrnce is calculated for each optimal lambda and prediction is made for the digit which we get the highest probability.

6. Accuracy is shown on the console.
==========================================================================

Conclusion:-
From the test set used we get accuracy of 93% for the given test files. you can see the result in program.

